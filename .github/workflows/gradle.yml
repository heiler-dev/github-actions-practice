# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  # Spring boot 앱을 빌드해서 DockerHub에 push하는 job
  build-and-push-to-docker-hub:
    runs-on: ubuntu-latest
    
    steps:
    # 0. Github 레포지토리로부터 CI서버로 소스코드를 내려받은 후에 지정한 브랜치로 전환하는 역할
    - uses: actions/checkout@v3

    # Java 17 버전 세팅
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        
    # 빌드를 위한 권한 부여
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    
    # Gradle을 이용하여 빌드
    - name: Build with Gradle
      uses: gradle/gradle-build-action@bd5760595778326ba7f1441bcf7e88b49de61a25 # v2.6.0
      with:
        arguments: clean bootJar

    # Docker 이미지 빌드
    - name: Build Docker image
      run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/github-actions-practice .

    # # Docker 로그인
    # - name: Docker login
    #   uses: docker/login-action@v2
    #   with:
    #     username: ${{ secrets.DOCKERHUB_USERNAME }}
    #     password: ${{ secrets.DOCKERHUB_TOKEN }}
    
    # # DockerHub에 Docker 이미지 push
    # - name: Push Docker image to Docker Hub
    #   run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/github-actions-practice
