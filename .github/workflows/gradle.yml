# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

# on: 어떤 이벤트가 발생했을 때 해당 workflow를 실행시킬지에 대한 정의
on:
  # main 브랜치에서 push 이벤트가 발생하면 workflow 실행
  push:
    branches: [ "main" ]
  
  # main 브랜치에서 PR 이벤트가 발생해도 workflow 실행
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-test:
    # Runner가 동작할 OS 환경
    runs-on: ubuntu-latest
    steps:
      # Github 레포지토리로부터 CI서버로 소스코드를 내려받은 후에 지정한 브랜치로 전환하는 역할
      - name: Checkout
        uses: actions/checkout@v4
  
      # Java 17 버전 세팅
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          
      # 빌드를 위한 권한 부여
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
        
      # Gradle을 이용하여 빌드
      - name: Build with Gradle
        uses: gradle/gradle-build-action@bd5760595778326ba7f1441bcf7e88b49de61a25 # v2.6.0
        with:
          arguments: clean bootJar

      # Unit test 진행
      - name: Test with Gradle
        run: ./gradlew --info test
        
      # Unit test에 대한 리포트 작성
      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          files: |
            test-results/**/*.xml
            test-results/**/*.trx
            test-results/**/*.json
      
      # 테스트 실패 시, 실패한 코드 라인에 Check 코멘트를 등록
      - name: Comment to test failed code line
        uses: mikepenz/action-junit-report@v3
        if: always()
        with:
          report_paths: '**/build/test-results/test/TEST-*.xml'
          token: ${{ github.token }}
  
  push-to-ghcr:
    # build-and-test가 사전에 통과해야 해당 job을 실행
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
  
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
      
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
        
      - name: Build with Gradle
        uses: gradle/gradle-build-action@bd5760595778326ba7f1441bcf7e88b49de61a25 # v2.6.0
        with:
          arguments: clean bootJar
          
      # 버전 태깅
      - name: Bump version and push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
  
      # Github Container Registry 로그인
      # CR_PAT: Container Registry Personal Acccess Token
      - name: Login to Github Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}        
          password: ${{ secrets.CR_PAT }}
          
      # Docker buildx 셋업
      - name: Set up Docker buildx
        id: buildx
        uses: docker/setup-buildx-action@v3
        
      # Docker 이미지 빌드 및 Github Container Registry에 push
      - name: Build and Push
        uses: docker/build-push-action@v5
        id: docker_build
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/practice:latest
            ghcr.io/${{ github.repository_owner }}/practice:${{ steps.tag_version.outputs.new_tag }}

      # Github에 release 생성
      - name: Create a GitHub release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.tag_version.outputs.new_tag }}
          name: Release ${{ steps.tag_version.outputs.new_tag }}
          body: ${{ steps.tag_version.outputs.changelog }}
  
