name: Setup PR Metadata

on:
  pull_request:
    types: [opened, reopened]

jobs:

  setup_pr:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      contents: read
      issues: write

    steps:
      - name: Set assignees
        continue-on-error: true
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { pull_request: pr, repository } = context.payload;
            const author = pr.user.login;

            await github.rest.issues.addAssignees({
              owner: repository.owner.login,
              repo: repository.name,
              issue_number: pr.number,
              assignees: [author],
            });

      - name: Set labels
        continue-on-error: true
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { pull_request: pr, repository } = context.payload;
            
            const labels = [];
            
            // 1. branch prefix 기반 라벨 추가
            const branch = pr.head.ref;
            const branchLabelMap = {
              'feature/': 'feature',
              'fix/': 'fix',
              'refactor/': 'refactor',
              'chore/': 'chore',
              'hotfix/': 'hotfix',
            };
            const branchPrefix = Object.keys(branchLabelMap).find(p => branch.startsWith(p));
            if (branchPrefix) labels.push(branchLabelMap[branchPrefix]);
            
            // 2. author 기반 라벨 추가
            const feTeam = [];
            const beTeam = ['threepebbles'];
            
            const author = pr.user.login;
            const authorLabel = feTeam.includes(author) ? 'fe' : beTeam.includes(author) ? 'be' : null;
            if (authorLabel) labels.push(authorLabel);
            
            if (labels.length) {
              await github.rest.issues.addLabels({
                owner: repository.owner.login,
                repo: repository.name,
                issue_number: pr.number,
                labels,
              });
            }

      - name: Set Project v2
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.PROJECT_V2_TOKEN }}
          script: |
            // Project v2 ID
            const projectNodeId = 'PVT_kwDODTY35s4A-Rii';
            const { pull_request } = context.payload;
            
            const addItemResponse = await github.graphql(`
              mutation($projectId: ID!, $contentId: ID!) {
                addProjectV2ItemById(input: { projectId: $projectId, contentId: $contentId }) {
                  item { id }
                }
              }
            `, {
              projectId: projectNodeId,
              contentId: pull_request.node_id,
            });
